# Generated by Django 2.0.3 on 2022-10-02 11:13

import construct.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('user_type', models.CharField(choices=[(1, 'CLIENT'), (2, 'ARCHITECT'), (3, 'ENGINEER')], default=1, max_length=1)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('profile_pic', models.ImageField(upload_to='')),
                ('address', models.TextField()),
                ('fcm_token', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', construct.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Architect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobile', models.CharField(max_length=20)),
                ('project_type', models.CharField(choices=[('Fire Resistive', 'Fire Resistive'), ('Non-Combustible', 'Non-Combustible'), ('Ordinary', 'Ordinary'), ('Heavy Timber', 'Heavy Timber'), ('Wooden Framed', 'Wooden Framed')], max_length=500, null=True)),
                ('project_plans', models.FileField(upload_to='ArchitectProjectPlans/')),
                ('budget', models.PositiveIntegerField(null=True)),
                ('status', models.BooleanField(default=False)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ArchitectTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archictect_plan', models.FileField(upload_to='ArchitectProjectPlans/')),
                ('progress', models.BigIntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Complete', 'Complete'), ('Incomplete', 'Incomplete'), ('Onprogress', 'Onprogress'), ('Stopped', 'Stopped')], max_length=254)),
                ('reply', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobile', models.CharField(max_length=20)),
                ('status', models.BooleanField(default=False)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ConstructionProjects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.CharField(max_length=254)),
                ('descrition', models.CharField(max_length=254)),
                ('project_type', models.CharField(choices=[('Fire Resistive', 'Fire Resistive'), ('Non-Combustible', 'Non-Combustible'), ('Ordinary', 'Ordinary'), ('Heavy Timber', 'Heavy Timber'), ('Wooden Framed', 'Wooden Framed')], max_length=254)),
                ('phases', models.CharField(choices=[('Site clearing', 'Site clearing'), ('Foundation', 'Foundation'), ('Plinth beam/slab', 'Plinth beam/slab'), ('Superstructure', 'Superstructure'), ('Brick masonry work', 'Brick masonry work'), ('The lintel', 'The lintel'), ('Roofing coating', 'Roofing coating'), ('Electrical/plumbing', 'Electrical/plumbing'), ('Exterior/interior finishing', 'Exterior/interior finishing'), ('Flooring', 'Flooring'), ('Painting', 'Painting')], max_length=150)),
                ('project_plans', models.FileField(upload_to='project_plans')),
                ('status', models.CharField(choices=[('Complete', 'Complete'), ('Incomplete', 'Incomplete'), ('Onprogress', 'Onprogress'), ('Stopped', 'Stopped')], max_length=254)),
                ('startdate', models.DateField(blank=True, null=True)),
                ('propdate', models.DateField(blank=True, null=True)),
                ('project_architect', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='construct.Architect')),
                ('project_client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='construct.Client')),
            ],
        ),
        migrations.CreateModel(
            name='Engineer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobile', models.IntegerField()),
                ('project_type', models.CharField(choices=[('Fire Resistive', 'Fire Resistive'), ('Non-Combustible', 'Non-Combustible'), ('Ordinary', 'Ordinary'), ('Heavy Timber', 'Heavy Timber'), ('Wooden Framed', 'Wooden Framed')], max_length=500, null=True)),
                ('project_images', models.FileField(upload_to='EngineerProjectImages/')),
                ('budget', models.PositiveIntegerField(null=True)),
                ('status', models.BooleanField(default=False)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EngineerTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eng_report', models.FileField(upload_to='engineerReport/')),
                ('eng_images', models.FileField(upload_to='engineerimages/')),
                ('phases', models.CharField(choices=[('Site clearing', 'Site clearing'), ('Foundation', 'Foundation'), ('Plinth beam/slab', 'Plinth beam/slab'), ('Superstructure', 'Superstructure'), ('Brick masonry work', 'Brick masonry work'), ('The lintel', 'The lintel'), ('Roofing coating', 'Roofing coating'), ('Electrical/plumbing', 'Electrical/plumbing'), ('Exterior/interior finishing', 'Exterior/interior finishing'), ('Flooring', 'Flooring'), ('Painting', 'Painting')], max_length=150)),
                ('reply', models.TextField()),
                ('eng_approved', models.CharField(choices=[('approved', 'approved'), ('notapproved', 'notapproved')], default='notapproved', max_length=150)),
                ('constructionproject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='construct.ConstructionProjects')),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackArchitect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.TextField()),
                ('reply', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('archictect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='construct.Architect')),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackEngineer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.TextField()),
                ('reply', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('engineer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='construct.Engineer')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationArchitect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('archictect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='construct.Architect')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationEngineer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('engineer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='construct.Engineer')),
            ],
        ),
        migrations.AddField(
            model_name='constructionprojects',
            name='project_eng',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='construct.Engineer'),
        ),
        migrations.AddField(
            model_name='architecttask',
            name='constructionproject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='construct.ConstructionProjects'),
        ),
    ]
